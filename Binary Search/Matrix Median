class Solution {
    int median(int mat[][]) {
        // code here
        int low=Integer.MAX_VALUE;
        int high=Integer.MIN_VALUE;
        int m=mat.length;
        int n=mat[0].length;
        for(int i=0;i<m;i++){
            low=Math.min(low, mat[i][0]);
            high=Math.max(high, mat[i][n-1]);
        }
        int ind=(m*n)/2;
        while(low<=high){
            int mid=(high-low)/2+low;
            if(helper(mat,mid)<=ind){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return low;
    }
    static int helper(int[][] mat,int val){
        int ans=0;
        int n=mat.length;
        for(int i=0;i<n;i++){
            ans+=numOfLesserValues(mat[i],val);
        }
        return ans;
    }
    static int numOfLesserValues(int[] mat, int val){
        int low=0;
        int n=mat.length;
        int high=n-1;
        while(low<=high){
            int mid=(high-low)/2+low;
            if(mat[mid]<=val){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return low;
    }
}
